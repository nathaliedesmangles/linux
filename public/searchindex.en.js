var relearn_searchindex = [
  {
    "breadcrumb": "",
    "content": "Pondération : 2-2-2\nDescription du cours :\nLinux est le système d’exploitation qui constitue la colonne vertébrale des entreprises les plus puissantes et les plus innovantes au monde. Dès lors, l’étudiante ou l’étudiant sera initié aux principes de base des systèmes d’exploitation libre (Linux) et à l’installation et l’exploitation d’une distribution libre de Linux (p. ex. Fedora, Ubuntu, AlmaLinux, OpenSource).\nPour cela, l’étudiant ou l’étudiante devra exploiter l’interface graphique et la puissance de la ligne de commande pour gérer une station de travail, explorer les systèmes de fichiers et le partitionnement des disques, gérer les processus, l’automatisation des tâches et la programmation de scripts shell.\nObjectifs du cours : Effectuer l’installation et la gestion d’ordinateurs.",
    "description": "Pondération : 2-2-2\nDescription du cours :\nLinux est le système d’exploitation qui constitue la colonne vertébrale des entreprises les plus puissantes et les plus innovantes au monde. Dès lors, l’étudiante ou l’étudiant sera initié aux principes de base des systèmes d’exploitation libre (Linux) et à l’installation et l’exploitation d’une distribution libre de Linux (p. ex. Fedora, Ubuntu, AlmaLinux, OpenSource).",
    "tags": [],
    "title": "420-ZG4-MO Système d’exploitation Linux",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux",
    "content": "Plan de la leçon Présentation du cours (plan de cours).\nPondération. Objectifs. Contexte d’apprentissage et méthodes pédagogiques. Evaluations formatives. Évaluations sommatives. Politiques institutionnelles (absences, retards, plagiat, etc.). Règlements en classe et hors classe. Théorie :\nGénéralités sur le système d’exploitation Linux. Atelier :\nInstallation de Linux sur une machine virtuelle.",
    "description": "Plan de la leçon Présentation du cours (plan de cours).\nPondération. Objectifs. Contexte d’apprentissage et méthodes pédagogiques. Evaluations formatives. Évaluations sommatives. Politiques institutionnelles (absences, retards, plagiat, etc.). Règlements en classe et hors classe. Théorie :\nGénéralités sur le système d’exploitation Linux. Atelier :\nInstallation de Linux sur une machine virtuelle.",
    "tags": [],
    "title": "Introduction à Linux",
    "uri": "/semaine1/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Introduction à Linux",
    "content": "Qu’est-ce qu’un système d’exploitation? Un système d’exploitation (SE) est un logiciel essentiel qui agit comme un intermédiaire entre l’utilisateur et le matériel de l’ordinateur. Il gère les ressources matérielles et logicielles de l’ordinateur et fournit des services communs pour les programmes informatiques. Voici quelques-unes de ses principales fonctions:\nGestion des ressources matérielles: Le système d’exploitation contrôle et coordonne l’utilisation du processeur, de la mémoire, des périphériques de stockage, et des périphériques d’entrée/sortie comme le clavier, la souris et l’écran.\nGestion des fichiers: Il organise les données en fichiers et dossiers, permettant aux utilisateurs de stocker, récupérer et manipuler des informations de manière efficace.\nGestion des processus: Le système d’exploitation gère l’exécution des programmes, en allouant du temps processeur et en assurant que les tâches s’exécutent sans conflit.\nInterface utilisateur: Il fournit une interface utilisateur, qui peut être en ligne de commande (CLI) ou graphique (GUI), permettant aux utilisateurs d’interagir facilement avec l’ordinateur.\nSécurité et gestion des utilisateurs: Le système d’exploitation protège les données et les ressources de l’ordinateur contre les accès non autorisés et permet la gestion des comptes utilisateurs.\nExemples de systèmes d’exploitation Windows: Développé par Microsoft, c’est l’un des systèmes d’exploitation les plus utilisés dans le monde. macOS: Développé par Apple, il est utilisé sur les ordinateurs Mac. Linux: Un système d’exploitation open-source utilisé principalement par les développeurs et les serveurs. Android: Utilisé principalement sur les smartphones et les tablettes. iOS: Le système d’exploitation d’Apple pour ses appareils mobiles comme l’iPhone et l’iPad. Pourquoi est-ce important? Le système d’exploitation est crucial car il permet à l’utilisateur d’exploiter pleinement les capacités de l’ordinateur sans avoir à gérer directement les complexités matérielles. Il offre une plateforme stable et sécurisée pour exécuter des applications et effectuer des tâches quotidiennes.\nQu’est-ce que Linux ? Définition\rLinux est un système d’exploitation puissant et flexible qui offre de nombreux avantages, notamment en termes de sécurité, de stabilité, et de personnalisation.\nQue ce soit pour un usage personnel, professionnel, ou pour des serveurs, Linux est une option solide et fiable.\nUn peu d’histoire 1991 : Créé par Linus Torvalds et est basé sur le système Unix. 1992 : Le noyau Linux a été re-licencié sous la licence publique générale GNU GPL (GNU’s Not Unix General Public Licence), ce qui a renforcé son statut de logiciel libre. 1994 : La version 1.0 du noyau Linux a été publiée, marquant une étape importante dans son développement. Depuis sa création, Linux est devenu l’un des systèmes d’exploitation les plus populaires, notamment pour les serveurs, les superordinateurs, et les appareils embarqués.\nCaractéristiques principales Open Source : Le code source de Linux est disponible gratuitement, permettant aux utilisateurs de le modifier et de le distribuer. Sécurité : Linux est réputé pour sa robustesse et sa sécurité. Les mises à jour régulières et la communauté active contribuent à maintenir un haut niveau de sécurité. Stabilité : Linux est connu pour sa stabilité et sa capacité à fonctionner pendant de longues périodes sans nécessiter de redémarrage. Personnalisation : Les utilisateurs peuvent personnaliser leur environnement Linux selon leurs besoins, grâce à une multitude de distributions et d’outils disponibles. Distributions Linux Définition\rUne distribution Linux est une version de Linux qui inclut le noyau Linux ainsi que divers logiciels et outils.\nVoici quelques-unes des distributions les plus populaires :\nUbuntu : Connue pour sa convivialité et son support communautaire.\nSite d’Ubuntu Fedora : Souvent utilisée par les développeurs et les administrateurs système.\nSite de Fedora Red Hat : L’une des premières distributions commerciales de Linux. Elle est particulièrement populaire dans les environnements d’entreprise.\nSite de Red Hat Debian : Réputée pour sa stabilité et sa large collection de logiciels.\nsite de Debian Arch Linux : Appréciée par les utilisateurs avancés pour sa flexibilité et sa simplicité.\nSite d’Arch Linux Utilisations de Linux Serveurs : Linux est largement utilisé pour les serveurs web, les serveurs de bases de données, et les serveurs de fichiers en raison de sa fiabilité et de sa sécurité. Superordinateurs : La majorité des superordinateurs dans le monde fonctionnent sous Linux. Appareils embarqués : De nombreux appareils, tels que les routeurs, les téléviseurs intelligents, et les smartphones (via Android), utilisent Linux. Postes de travail : Bien que moins courant que Windows ou macOS, Linux est utilisé par de nombreux développeurs et professionnels de l’informatique pour ses capacités de personnalisation et ses outils puissants. Répartition des SE chez les développeurs Répartition des systèmes d’exploitation pour le développement de logiciels dans le monde de 2018 à 2023\nAvantages Inconvénients Très souvent le même environnement que la machine de production (surtout pour la portion serveur d’une application) Accès très limité aux outils Microsoft : pas de Visual Studio, seulement VS Code et un support minimal pour C# Très facile d’installer des nouveaux outils de développement : $ dnf install nodejs $ dnf install nodejs Une bonne console (ligne de commande) est souvent un bon dépanneur pour un développeur (p.ex. les messages d’erreur sont souvent plus explicites à la ligne de commande que dans l’IDE) Plus facile d’automatiser des tâches de compilation et de tests Systèmes plus légers qui laissent la place aux outils de développement (p.ex. mon Linux prend moins de 1Go de mémoire, alors le reste est pour les outils, VM, etc.). Dans le cours Android p.ex., l’environnement de développement prend 15Go de mémoire (pour l’IDE + deux émulateurs de téléphone). Part de marché des SE pour les serveurs Part de marché des systèmes d’exploitation pour les serveurs",
    "description": "Qu’est-ce qu’un système d’exploitation? Un système d’exploitation (SE) est un logiciel essentiel qui agit comme un intermédiaire entre l’utilisateur et le matériel de l’ordinateur. Il gère les ressources matérielles et logicielles de l’ordinateur et fournit des services communs pour les programmes informatiques. Voici quelques-unes de ses principales fonctions:\nGestion des ressources matérielles: Le système d’exploitation contrôle et coordonne l’utilisation du processeur, de la mémoire, des périphériques de stockage, et des périphériques d’entrée/sortie comme le clavier, la souris et l’écran.",
    "tags": [],
    "title": "Qu'est-ce que Linux ?",
    "uri": "/semaine1/cours/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Introduction à Linux",
    "content": "Objectifs L’atelier a pour but de vous guider à travers le processus d’installation de Linux sur une machine virtuelle (VM). Cela permet d’expérimenter avec Linux sans affecter le système d’exploitation principal de l’ordinateur.\nPrérequis pour l’atelier Avoir Windows 10 ou 11 installé sur votre disque SSD (sur une seule partition). Télécharger un logiciel de virtualisation tel que VMWare Workstation Pro 17. Vous trouverez le fichier executable de VMWare sur le Moodle du cours 3.Télécharger la dernière version d’Almalinux (janvier 2025 c’est la version 9.5). Vous trouverez l’image sur le site suivant https://almalinux.org/get-almalinux/ Note\rChoisir AlmaLinux OS 9.5 DVD ISO\nRappels (Cours ZE5 Virtualisation) VMWare permet d’installer différents systèmes d’exploitation sur une même machine. Le nombre de machines virtuelles que l’on peut installer dépend de la puissance en terme de CPU et de mémoire de la machine hôte. La machine hôte est celle qui héberge les machines virtuelles aussi appelées les invités. La machine hôte peut être Windows ou Linux et les invités peuvent être une grande variété de systèmes d’exploitation. À faire Étape 1: Installation de Windows [Guide d’installation de Windows](Lien à venir)\nÉtape 2: Installation de VMWare [Guide d’installation de VMWare](Lien à venir)\nÉtape 3: Installation d’Almalinux [Guide d’installation d’Almalinux](Lien à venir)",
    "description": "Objectifs L’atelier a pour but de vous guider à travers le processus d’installation de Linux sur une machine virtuelle (VM). Cela permet d’expérimenter avec Linux sans affecter le système d’exploitation principal de l’ordinateur.\nPrérequis pour l’atelier Avoir Windows 10 ou 11 installé sur votre disque SSD (sur une seule partition). Télécharger un logiciel de virtualisation tel que VMWare Workstation Pro 17. Vous trouverez le fichier executable de VMWare sur le Moodle du cours 3.Télécharger la dernière version d’Almalinux (janvier 2025 c’est la version 9.5). Vous trouverez l’image sur le site suivant https://almalinux.org/get-almalinux/ Note\rChoisir AlmaLinux OS 9.5 DVD ISO",
    "tags": [],
    "title": "ATELIER #1: Installation de Linux sur une VM",
    "uri": "/semaine1/atelier/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux",
    "content": "Plan de la leçon Théorie :\nQu’est-ce que le Shell ? La ligne de commandes Quelques commandes simples Atelier :\nInstallation de WSL et Ubuntu Exercices pratiques sur les commandes simples",
    "description": "Plan de la leçon Théorie :\nQu’est-ce que le Shell ? La ligne de commandes Quelques commandes simples Atelier :\nInstallation de WSL et Ubuntu Exercices pratiques sur les commandes simples",
    "tags": [],
    "title": "Introduction à Linux (suite)",
    "uri": "/semaine2/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Introduction à Linux (suite)",
    "content": "Qu’est-ce que le SHELL? Le terme “Shell” désigne un programme qui interprète les commandes que vous tapez et les exécute. Il existe plusieurs types de shells, comme le Bourne Shell (sh), le C Shell (csh), le Korn Shell (ksh), et bien d’autres.\nLa ligne de commande Ligne de commande: La ligne de commande est l’interface où vous tapez vos commandes. Elle est souvent représentée par un symbole $ ou # pour les utilisateurs root (administrateur). Lorsque vous êtes prêt à exécuter une commande, appuyez sur la touche Entrée. Tapez chaque commande sur une ligne séparée. Le résultat de la commande est affiché avant l’invite du shell suivante. Exemple:\n[user@host]$ whoami user [user@host]$ Commandes simples Ces commandes simples sont essentielles pour naviguer et gérer efficacement un système Linux à l’aide du shell Bash. La maîtrise de ces commandes vous permettra d’effectuer des tâches courantes de manière plus efficace et de mieux comprendre le fonctionnement de votre système.\nCommande Description Options date Affiche la date et l’heure du système. +FORMAT pour formater la sortie. passwd Change le mot de passe utilisateur. -l pour verrouiller un compte. file Détermine le type de fichier. Un fichier ASCII sera lisible/compréhensible -i pour afficher le type MIME. cat Affiche le contenu d’un fichier. -n pour numéroter les lignes. less Affiche le contenu d’un fichier page par page. -N pour numéroter les lignes. head Affiche par défaut, les 10 premières lignes d’un fichier. -n pour spécifier le nombre de lignes. tail Affiche par défaut, les 10 dernières lignes d’un fichier. -n pour spécifier le nombre de lignes. wc Compte les lignes, mots et caractères. -l pour les lignes, -w pour les mots. ls Liste les fichiers et répertoires. -l pour un format détaillé. history Affiche l’historique des commandes. -c pour effacer l’historique. Le point d’exclamation (!) rappelle les commandes précédentes sans avoir à les retaper. La commande !nombre rappelle la commande correspondant au nombre spécifié. La commande !string rappelle la commande la plus récente qui commence par la chaîne spécifiée. Exemples 1. Commande date pour la date et l’heure courantes Option Description %a Nom abrégé du jour de la semaine (par exemple, Mon) %A Nom complet du jour de la semaine (par exemple, Monday) %b Nom abrégé du mois (par exemple, Jan) %B Nom complet du mois (par exemple, January) %c Date et heure locale (par exemple, Thu Mar 3 23:05:25 2005) %d Jour du mois (01 à 31) %H Heure (00 à 23) %I Heure (01 à 12) %j Jour de l’année (001 à 366) %m Mois (01 à 12) %M Minutes (00 à 59) %p AM ou PM %S Secondes (00 à 60) %U Numéro de la semaine de l’année, avec le dimanche comme premier jour de la semaine (00 à 53) %w Jour de la semaine (0 à 6, avec dimanche = 0) %y Année sans le siècle (00 à 99) %Y Année avec le siècle (par exemple, 2025) %Z Fuseau horaire (par exemple, EST) Quelques exemples:\nnathalie@Yoda:~$ date Thu Jan 9 20:42:36 EST 2025 nathalie@Yoda:~$ date \"+%Y-%m-%d %H:%M:%S\" 2025-01-09 20:42:46 nathalie@Yoda:~$ date +%r 08:44:38 PM nathalie@Yoda:~$ date +%R 20:44 nathalie@Yoda:~$ date +%x 01/09/25 nathalie@Yoda:~$ date +%X 20:44:00 nathalie@Yoda:~$ date +%h Jan\r2. commande `` pour changer le mot de passe de l’utilisateur [nathalie@Yoda ~]$ passwd Changing password for user nathalie. Current password: ancien_mot_de_passe New password: nouveau_mot_de_passe Retype new password: nouveau_mot_de_passe passwd: all authentication tokens updated successfully.\r3. Commande file pour obtenir le type d’un fichier nathalie@Yoda:~$ file /etc/services /etc/services: ASCII text nathalie@Yoda:~$ file /home /home: directory\r4. Commande cat pour afficher le contenu d’un fichier Un fichier à la fois:\nnathalie@Yoda:~$ cat /etc/services # Network services, Internet style # # Updated from https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml . # # New ports will be added on request if they have been officially assigned # by IANA and used in the real-world or are needed by a debian package. # If you need a huge list of used numbers please install the nmap package. tcpmux 1/tcp # TCP port service multiplexer echo 7/tcp echo 7/udp discard 9/tcp sink null discard 9/udp sink null systat 11/tcp users daytime 13/tcp daytime 13/udp netstat 15/tcp\rDeux fichiers à la fois:\nnathalie@Yoda:~$ cat fichier1 fichier2 Hello World!! Introduction aux commandes Linux.\r5. Commande less pour afficher le contenu d’un fichier page par page nathalie@Yoda:~$ less /etc/services # Network services, Internet style # # Updated from https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml . # # New ports will be added on request if they have been officially assigned # by IANA and used in the real-world or are needed by a debian package. # If you need a huge list of used numbers please install the nmap package. tcpmux 1/tcp # TCP port service multiplexer echo 7/tcp echo 7/udp discard 9/tcp sink null discard 9/udp sink null systat 11/tcp users daytime 13/tcp daytime 13/udp netstat 15/tcp qotd 17/tcp quote chargen 19/tcp ttytst source chargen 19/udp ttytst source ftp-data 20/tcp ftp 21/tcp fsp 21/udp fspd ssh 22/tcp # SSH Remote Login Protocol telnet 23/tcp smtp 25/tcp mail time 37/tcp timserver time 37/udp timserver whois 43/tcp nicname tacacs 49/tcp # Login Host Protocol (TACACS) tacacs 49/udp domain 53/tcp # Domain Name Server domain 53/udp bootps 67/udp bootpc 68/udp tftp 69/udp /etc/services\rNB: Pour revenir à la ligne de commande, taper la lettre ‘q’\n6. Commande head pour afficher les premières lignes d’un fichier nathalie@Yoda:~$ head /etc/services # Network services, Internet style # # Updated from https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml . # # New ports will be added on request if they have been officially assigned # by IANA and used in the real-world or are needed by a debian package. # If you need a huge list of used numbers please install the nmap package. tcpmux 1/tcp # TCP port service multiplexer echo 7/tcp nathalie@Yoda:~$ head -n 5 /etc/services Network services, Internet style # # Updated from https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml . # # New ports will be added on request if they have been officially assigned\r7. Commande tail pour afficher les dernières lignes d’un fichier nathalie@Yoda:~$ tail /etc/services sgi-cad 17004/tcp # Cluster Admin daemon binkp 24554/tcp # binkp fidonet protocol asp 27374/tcp # Address Search Protocol asp 27374/udp csync2 30865/tcp # cluster synchronization tool dircproxy 57000/tcp # Detachable IRC Proxy tfido 60177/tcp # fidonet EMSI over telnet fido 60179/tcp # fidonet EMSI over TCP # Local services nathalie@Yoda:~$ tail -n 5 /etc/services dircproxy 57000/tcp # Detachable IRC Proxy tfido 60177/tcp # fidonet EMSI over telnet fido 60179/tcp # fidonet EMSI over TCP # Local services\r8. Commande wc pour obtenir le nombre de lignes, de mots et la taille en octets dans un fichier nathalie@Yoda:~$ wc /etc/services 361 1773 12813 /etc/services nathalie@Yoda:~$ wc -l /etc/services 361 /etc/services nathalie@Yoda:~$ wc -w /etc/services 1773 /etc/services nathalie@Yoda:~$ wc -c /etc/services 12813 /etc/services\r9. Commande ls pour lister les détails d’un fichier En premier, allons dans le répertoire /etc à l’aide de la commande cd\nnathalie@Yoda:~$ cd /etc\rUtilisons la commande ls\nnathalie@Yoda:/etc$ ls PackageKit cron.weekly groff locale.conf nsswitch.conf rmt supercat X11 cron.yearly group locale.gen opt rpc sysctl.conf adduser.conf crontab group- localtime os-release rsyslog.conf sysctl.d nathalie@Yoda:/etc$ ls -l total 340 drwxr-xr-x 1 root root 4096 Apr 23 2024 PackageKit drwxr-xr-x 1 root root 4096 Apr 23 2024 X11 -rw-r--r-- 1 root root 3444 Jul 5 2023 adduser.conf drwxr-xr-x 1 root root 4096 Apr 23 2024 alternatives drwxr-xr-x 1 root root 4096 Apr 23 2024 apparmor\r10. Commande history pour afficher les commandes effectuées précédemment Pour revenir au dossier personnel\nnathalie@Yoda:/etc$ cd ~\rnathalie@Yoda:~$ history exit 2 date 3 date +Y% 4 date -%m 5 date help 6 man date 7 date -d 8 exit 9 date \"+%Y-%m-%d %H:%M:%S\" 10 date 11 date %r 12 date +%R 13 date +%x 14 date +%Y 15 date +%m 16 date +%s 17 date +%M 18 date +%d 19 date +%D 20 date +%h 21 date +%r 22 date +%X 23 date +%S 24 file etc/services 25 ls 26 file /etc/services 27 cat /etc/services 28 less /etc/services 29 file /home 30 less /etc/services 31 head /etc/services 32 head -n 5 /etc/services 33 tail /etc/services 34 tail -n 5 /etc/services 35 wc /etc/services 36 wc -l /etc/services 37 wc -c /etc/services 38 wc -w /etc/services 39 ls 40 ls -l 41 cd /etc 42 ls 43 ls -l 44 cd .. 45 cd ~ 46 history\rLa touche tab pour auto-compléter une commande et le nom d’un fichier | Tab | Tapez cat /etc/ser puis appuyez sur Tab pour auto-compléter le nom du fichier. |\nDescription : Permet de compléter rapidement les commandes et les noms de fichiers après avoir entré un nombre de caractères suffisant pour réduire les possibilités à une seule. Si les caractères saisis ne sont pas uniques, appuyez deux fois sur la touche de tabulation pour afficher toutes les commandes correspondantes. [user@host ~]$ pas Tab+Tab passwd paste pasuspender [user@host ~]$ pass Tab [user@host ~]$ passwd Changing password for user user. Current password: Exemple : [user@host ~]$ ls /etc/pas1Tab [user@host ~]$ ls /etc/passwd2Tab passwd passwd-\rRésultat : passwd passwd-\rhistory Description : Affiche la liste des commandes précédemment exécutées, précédées d’un numéro de commande. [user@host ~]$ history ...output omitted... 23 clear 24 who 25 pwd 26 ls /etc 27 uptime 28 ls -l 29 date 30 history\rExemple : [user@host ~]$ !ls ls -l total 0 drwxr-xr-x. 2 user user 6 Mar 29 21:16 Desktop ...output omitted... [user@host ~]$ !26 ls /etc abrt hosts pulse adjtime hosts.allow purple aliases hosts.deny qemu-ga ...output omitted...\rRésultat : ls -l total 0 drwxr-xr-x. 2 user user 6 Mar 29 21:16 Desktop ls /etc abrt hosts pulse adjtime hosts.allow purple aliases hosts.deny qemu-ga\r====\nLa commande man La commande man (abréviation de “manual”) est utilisée pour afficher le manuel d’utilisation des commandes et programmes sous Linux. Elle fournit des informations détaillées sur la syntaxe, les options et les exemples d’utilisation des commandes.\nUtilisation de la commande man Pour utiliser la commande man, il suffit de taper man suivi du nom de la commande ou du programme dont vous souhaitez consulter le manuel. Par exemple :\nman ls\rCela affichera le manuel de la commande ls.\nStructure d’une page de manuel Une page de manuel typique contient plusieurs sections, telles que :\nNAME : Le nom de la commande et une brève description. SYNOPSIS : La syntaxe de la commande. DESCRIPTION : Une description détaillée de la commande et de ses options. OPTIONS : Les options disponibles pour la commande. EXAMPLES : Des exemples d’utilisation. SEE ALSO : Des références à d’autres commandes ou documents pertinents. Options utiles man -k keyword : Recherche des pages de manuel contenant le mot-clé spécifié. man -f command : Affiche une brève description de la commande (équivalent à whatis command). Exemple Pour afficher le manuel de la commande cat, vous pouvez utiliser :\nman cat",
    "description": "Qu’est-ce que le SHELL? Le terme “Shell” désigne un programme qui interprète les commandes que vous tapez et les exécute. Il existe plusieurs types de shells, comme le Bourne Shell (sh), le C Shell (csh), le Korn Shell (ksh), et bien d’autres.\nLa ligne de commande Ligne de commande: La ligne de commande est l’interface où vous tapez vos commandes. Elle est souvent représentée par un symbole $ ou # pour les utilisateurs root (administrateur). Lorsque vous êtes prêt à exécuter une commande, appuyez sur la touche Entrée. Tapez chaque commande sur une ligne séparée. Le résultat de la commande est affiché avant l’invite du shell suivante. Exemple:",
    "tags": [],
    "title": "Shell et la ligne de commande",
    "uri": "/semaine2/cours/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Introduction à Linux (suite)",
    "content": "Objectifs de l’atelier Cet atelier a pour but de vous familiariser avec la ligne de commandes en utilisant Ubuntu comme distribution Linux.\nFormat de la remise Attention\rPour chacune des étapes des parties 2 et 3 vous devrez prendre une capture d’écran de vos commandes et résultats. ATTENTION: On doit pouvoir voir votre non d’utilisateur. Ne travaillez donc pas avec l’utilisateur root.\nAtelier Partie 1: Installations WSL (Windows Subsystem for Linux) Rechercher les fonctionnalités Windows Dans la liste, cocher Sous-Système Windows pour Linux Redémarrer Une fois redémarré, vous pouvez installer la distribution Ubuntu depuis le Microsoft Store.\nPartie 2: Installation d’Ubuntu WSL prend en charge une variété de distributions Linux, y compris la dernière version LTS d’Ubuntu.\nIl existe plusieurs façons d’installer des distributions sur WSL, nous nous concentrons ici sur la méthode via l’application dans Microsoft Store et les commandes WSL exécutées dans le terminal. Le résultat est le même quelle que soit la méthode.\nApplication dans Microsoft Store\nOuvrir Microsoft Store et trouver la dernière version d’Ubuntu. Cliquez sur Free/Gratuit, puis sur Get/Obtenir. Patienter durant l’installation. Ubuntu sera alors installé sur votre machine.\nAvant de commencer, s’assurer qu’Ubuntu est à jour:\n$ sudo apt update\rPrenez une capture d’écran de la fenêtre de la commande avec le résultat et nommez-la 1.png. NOTE: La commande sudo permet d’exécuter une commande en tant qu’administrateur du système.\nUne fois installé, vous pouvez soit lancer l’application directement depuis le Microsoft Store, soit rechercher Ubuntu dans votre barre de recherche Windows.\nPrenez une capture d’écran de la fenêtre de terminal Ubuntu et nommez-la 2.png. References:\nSite Ubuntu WSL Vidéo YouTube Partie 3: Commandes Linux simples Commande date\nAfficher la date et l’heure actuelles du système. Prendre une capture d’écran du résultat et nommez-la 3.png. Afficher l’heure actuelle sur une horloge de douze heures (par exemple, 11:42:11 AM). Conseil : la chaîne de format qui affiche cette sortie est %r. Prendre une capture d’écran du résultat et nommez-la 4.png. Commande file\nQuel est le type du fichier /etc/services ? Prendre une capture d’écran du résultat et nommez-la 4.png. Est-il lisible par des humains ? Répondre dans un fichier texte nommé “question4.txt” en justifiant votre réponse. Commande wc\nAfficher la taille du fichier /etc/services. Prendre une capture d’écran du résultat et nommez-la 5.png. Commande head\nAffichez les 10 premières lignes du fichier /etc/services Prendre une capture d’écran du résultat et nommez-la 6.png. Commande tail\nAffichez les 10 dernières lignes du fichier /etc/services. Prendre une capture d’écran du résultat et nommez-la 7.png. Commande tail et la flèche vers le haut\nRépéter la commande précédente avec exactement trois frappes de touches. Prendre une capture d’écran du résultat et nommez-la 8.png. Commande tail et les flèches vers le haut et vers la gauche\nRépéter la commande précédente, mais afficher les 20 dernières lignes du fichier. Prendre une capture d’écran du résultat et nommez-la 9.png. Commande history\nUtiliser l’historique du shell pour exécuter à nouveau la commande date +%r. Prendre une capture d’écran du résultat et nommez-la 10.png.",
    "description": "Objectifs de l’atelier Cet atelier a pour but de vous familiariser avec la ligne de commandes en utilisant Ubuntu comme distribution Linux.\nFormat de la remise Attention\rPour chacune des étapes des parties 2 et 3 vous devrez prendre une capture d’écran de vos commandes et résultats. ATTENTION: On doit pouvoir voir votre non d’utilisateur. Ne travaillez donc pas avec l’utilisateur root.\nAtelier Partie 1: Installations WSL (Windows Subsystem for Linux) Rechercher les fonctionnalités Windows",
    "tags": [],
    "title": "ATELIER #2: WSL, Ubuntu et des commandes Linux simples",
    "uri": "/semaine2/atelier/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Système de fichiers, SHELL et commandes de base",
    "content": "La structure du système de fichiers Linux est hiérarchique et organisée sous la forme d’un arbre inversé, où la racine (root) est représentée par /. Tous les fichiers et répertoires sont situés sous cette racine. Comprendre cette structure est essentiel pour naviguer et gérer efficacement un système Linux.\nLa structure du système de fichiers Linux est conçue pour être logique et organisée, facilitant ainsi la gestion et la navigation. Chaque répertoire a un rôle spécifique et contient des types de fichiers bien définis. Comprendre cette structure est crucial pour tout utilisateur ou administrateur de système Linux.\nRépertoires principaux / (Racine)\nLe point de départ de l’arborescence du système de fichiers. Tous les autres répertoires et fichiers sont situés sous ce répertoire. /bin\nContient les binaires essentiels nécessaires au démarrage du système et à l’exécution des commandes de base, comme ls, cp, mv, etc. /boot\nContient les fichiers nécessaires au démarrage du système, y compris le noyau Linux et les fichiers de configuration du chargeur de démarrage (bootloader). /dev\nContient les fichiers de périphériques. Chaque périphérique matériel (comme les disques durs, les clés USB, etc.) est représenté par un fichier dans ce répertoire. /etc\nContient les fichiers de configuration du système. Par exemple, les fichiers de configuration des services, des utilisateurs, des réseaux, etc. /home\nContient les répertoires personnels des utilisateurs. Chaque utilisateur a son propre répertoire sous /home, par exemple /home/utilisateur. /lib\nContient les bibliothèques partagées nécessaires pour les binaires situés dans /bin et /sbin. /media\nPoint de montage pour les périphériques amovibles comme les CD-ROM, les clés USB, etc. /mnt\nUtilisé pour monter temporairement des systèmes de fichiers. Par exemple, pour monter un disque dur externe. /opt\nContient les logiciels optionnels et les paquets additionnels qui ne sont pas inclus dans la distribution standard. /proc\nSystème de fichiers virtuel qui contient des informations sur les processus en cours et le système. Par exemple, /proc/cpuinfo contient des informations sur le processeur. /root\nRépertoire personnel de l’utilisateur root (administrateur du système). /run\nContient des informations sur l’état du système depuis le dernier démarrage. Utilisé pour stocker des fichiers temporaires nécessaires au fonctionnement du système. /sbin\nContient les binaires essentiels pour l’administration du système, comme fdisk, ifconfig, etc. /srv\nContient les données spécifiques aux services fournis par le système. Par exemple, les fichiers de données pour un serveur web peuvent être stockés ici. /tmp\nContient les fichiers temporaires créés par les utilisateurs et les applications. Ce répertoire est souvent vidé au redémarrage du système. /usr\nContient les applications et les fichiers utilisés par les utilisateurs. Sous-répertoires importants : /usr/bin : Contient les binaires des applications utilisateur. /usr/lib : Contient les bibliothèques partagées pour les applications utilisateur. /usr/local : Contient les logiciels installés localement par l’administrateur du système. /var\nContient les fichiers variables, tels que les journaux système, les fichiers de spool, et les fichiers temporaires des applications. Par exemple, /var/log contient les fichiers journaux. Le shell BASH BASH, qui signifie “Bourne Again SHell”, est une version améliorée du Bourne Shell. Il a été développé pour offrir plus de fonctionnalités et une meilleure compatibilité avec les scripts existants. Voici quelques différences clés :\n- **Compatibilité** : BASH est compatible avec les scripts du Bourne Shell, mais il offre également des fonctionnalités supplémentaires.\r- **Fonctionnalités : BASH inclut des fonctionnalités avancées comme l'édition de ligne de commande, l'historique des commandes, et le complétion automatique des noms de fichiers et des commandes.\r- **Portabilité** : BASH est disponible sur de nombreux systèmes d'exploitation, y compris Linux, macOS, et Windows (via WSL).\rStructure de base d’une commande Une commande dans le shell suit généralement cette structure :\ncommande [options] [arguments]\rcommande : Le programme ou l’outil que vous souhaitez exécuter. options : Des paramètres supplémentaires qui modifient le comportement de la commande. arguments : Les cibles sur lesquelles la commande doit agir (fichiers, répertoires, etc.). Les chemins absolu et relatifs Chemin absolu Un chemin absolu est un chemin complet qui commence à la racine du système de fichiers. Il indique l’emplacement exact d’un fichier ou d’un répertoire, peu importe où vous vous trouvez dans le système de fichiers. Par exemple :\n/home/utilisateur/Documents/fichier.txt\rDans cet exemple, le chemin commence par /, qui est la racine du système de fichiers, et suit l’arborescence jusqu’au fichier fichier.txt.\nChemin relatif Un chemin relatif, quant à lui, est un chemin qui est relatif à votre répertoire de travail actuel. Il ne commence pas par /. Par exemple, si vous êtes dans le répertoire /home/utilisateur, et que vous voulez accéder à fichier.txt dans le sous-répertoire Documents, vous pouvez utiliser :\nDocuments/fichier.txt\rOu, si vous voulez remonter d’un niveau dans l’arborescence, vous pouvez utiliser .. pour représenter le répertoire parent. Par exemple, si vous êtes dans /home/utilisateur/Documents et que vous voulez accéder à un fichier dans /home/utilisateur, vous pouvez utiliser :\n../fichier.txt\rEn résumé\nChemin absolu : Commence à la racine / et donne l’emplacement complet. Chemin relatif : Dépend de votre répertoire de travail actuel et ne commence pas par /. Les commandes de navigation dans l’arborescence des fichiers Commande Description Exemple pwd Affiche le chemin absolu du répertoire courant pwd -\u003e /home/utilisateur cd Change le répertoire courant cd Documents -\u003e Change au répertoire Documents ls Liste les fichiers et répertoires ls -\u003e Affiche les fichiers et répertoires dans le répertoire courant cd .. Remonte d’un niveau dans l’arborescence des répertoires cd .. -\u003e Remonte au répertoire parent cd ~ Va au répertoire personnel de l’utilisateur cd ~ -\u003e Change au répertoire personnel, par exemple /home/utilisateur Exemples d’utilisation Commandes de gestion des fichiers et répertoires Commande Description Exemple cp Copie des fichiers ou répertoires cp fichier.txt /destination -\u003e Copie fichier.txt vers /destination mv Déplace ou renomme des fichiers ou répertoires mv fichier.txt nouveau_nom.txt -\u003e Renomme fichier.txt en nouveau_nom.txt rm Supprime des fichiers rm fichier.txt -\u003e Supprime fichier.txt mkdir Crée un nouveau répertoire mkdir nouveau_dossier -\u003e Crée un répertoire nommé nouveau_dossier rmdir Supprime un répertoire vide rmdir dossier_vide -\u003e Supprime le répertoire dossier_vide s’il est vide Exemples d’utilisation",
    "description": "La structure du système de fichiers Linux est hiérarchique et organisée sous la forme d’un arbre inversé, où la racine (root) est représentée par /. Tous les fichiers et répertoires sont situés sous cette racine. Comprendre cette structure est essentiel pour naviguer et gérer efficacement un système Linux.\nLa structure du système de fichiers Linux est conçue pour être logique et organisée, facilitant ainsi la gestion et la navigation. Chaque répertoire a un rôle spécifique et contient des types de fichiers bien définis. Comprendre cette structure est crucial pour tout utilisateur ou administrateur de système Linux.",
    "tags": [],
    "title": "Système de fichiers et le shell BASH",
    "uri": "/semaine3/cours/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux",
    "content": "Plan de la leçon Théorie :\nStructure du système de fichiers Linux Commandes de navigation de base (ls, cd, pwd, etc.) Commandes de gestion des fichiers (cp, mv, rm, mkdir, etc.) Atelier :\nManipulation des fichiers et des répertoires",
    "description": "Plan de la leçon Théorie :\nStructure du système de fichiers Linux Commandes de navigation de base (ls, cd, pwd, etc.) Commandes de gestion des fichiers (cp, mv, rm, mkdir, etc.) Atelier :\nManipulation des fichiers et des répertoires",
    "tags": [],
    "title": "Système de fichiers, SHELL et commandes de base",
    "uri": "/semaine3/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux \u003e Système de fichiers, SHELL et commandes de base",
    "content": "Objectif de l’atelier Cet atelier a pour but de vous familiariser avec les commandes de base pour la gestion des fichiers sous Linux en utilisant la distribution Linux de votre choix. Les exercices pratiques permettront de renforcer la compréhension et l’utilisation de ces commandes.\nFormat de la remise Attention\rPour chacune des étapes et questions vous devrez prendre une capture d’écran de vos commandes et résultats. ATTENTION: On doit pouvoir voir votre non d’utilisateur. Ne travaillez donc pas avec l’utilisateur root.\nAtelier Exercice #1: Navigation dans la structure de fichiers de Linux Commande date\nAfficher la date et l’heure actuelles du système.** Prenez une capture d’écran du résultat et nommez-la 1.png. Commande ls\nListez les fichiers et répertoires dans le répertoire courant en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 2.png. Commande pwd\nAffichez le chemin du répertoire courant en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 3.png. Commande cd\nChangez de répertoire pour le répertoire “home” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 4.png. Commande ls -l\nListez les fichiers et répertoires avec des détails supplémentaires en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 5.png. Exercice #2: Création, suppression et déplacement de fichiers et répertoires Attention\rAvant de commencer, assurez vous d’être dans votre répertoire personnel.\nCommande mkdir\nCréez deux nouveaux répertoires nommés “test” et “atelier3” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 6.png. Commande rmdir\nSupprimez le répertoire “test” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 7.png. Commande cd\nChangez de répertoire pour le répertoire “atelier” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 8.png. Commande touch\nCréez un nouveau fichier nommé “fichier.txt” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 9.png. Commande echo\nAjoutez du texte au fichier “fichier.txt” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 10.png. Commande cat\nAffichez le contenu du fichier “fichier.txt” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 11.png. Commande mv\nDéplacez le fichier “fichier.txt” vers un nouveau répertoire nommé “documents” en utilisant la commande: Prenez une capture d’écran du résultat et nommez-la 12.png. Commande rm\nSupprimez le fichier “fichier.txt” en utilisant la commande. Prenez une capture d’écran du résultat et nommez-la 13.png. Note\rNB : pour les questions #14 à #18, utiliser le texte disponible ici. Copiez collez le texte dans un fichier texte nommé “fichier2.txt”.\nCommande mv\nDéplacez le fichier dans votre répertoire atelier2. Prenez une capture d’écran du résultat et nommez-la 14.png. Commande less\nAffichez le contenu d’un fichier page par page, jusqu’à la dernière page. Prenez une capture d’écran du résultat et nommez-la 15.png. Commande head.\nAffichez les premières lignes du fichier. Prenez une capture d’écran du résultat et nommez-la 16.png. Commande tail.\nAffichez les dernières lignes du fichier. Prenez une capture d’écran du résultat et nommez-la 17.png. Commande history\nAffichez l’historique des commandes précédemment exécutées en utilisant la commande Prenez une capture d’écran du résultat et nommez-la 18.png.",
    "description": "Objectif de l’atelier Cet atelier a pour but de vous familiariser avec les commandes de base pour la gestion des fichiers sous Linux en utilisant la distribution Linux de votre choix. Les exercices pratiques permettront de renforcer la compréhension et l’utilisation de ces commandes.\nFormat de la remise Attention\rPour chacune des étapes et questions vous devrez prendre une capture d’écran de vos commandes et résultats. ATTENTION: On doit pouvoir voir votre non d’utilisateur. Ne travaillez donc pas avec l’utilisateur root.",
    "tags": [],
    "title": "ATELIER #3: Les commandes Linux de base",
    "uri": "/semaine3/atelier/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/categories/index.html"
  },
  {
    "breadcrumb": "420-ZG4-MO Système d’exploitation Linux",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/tags/index.html"
  }
]
